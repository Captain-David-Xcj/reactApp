{"version":3,"sources":["App.js","serviceWorker.js","clock/AnalogDisplay.js","clock/DigitalDisplay.js","clock/Clock.js","HelloWorld.js","button/Button.js","form/InputText.js","form/Account.js","button/ButtonTest.js","HOC/Button.js","HOC/Link.js","HOC/Logo.js","HOC/LoadWebsite.js","HOC/Content.js","index.js","logo.svg"],"names":["App","react_default","a","createElement","className","src","logo","alt","href","target","rel","Component","Boolean","window","location","hostname","match","AnalogDisplay","date","Date","this","props","time","secondHandStyle","position","top","left","border","width","height","transform","getSeconds","toString","transformOrigin","backgroundColor","minuteHandStyle","getMinutes","hourHandStyle","getHours","style","borderRadius","borderStyle","borderColor","React","DigitalDisplay","Clock","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","launchClock","state","currentTime","_this2","setInterval","setState","clock_AnalogDisplay","clock_DigitalDisplay","HelloWorld","frameWorkName","Button","counter","event","onClick","handleClick","bind","InputText","handleChange","assertThisInitialized","console","log","value","type","onChange","defaultValue","Account","accountNumber","replace","placeholder","length","ButtonTest","buttonLabel","defaultProps","label","Link","Logo","LoadWebsite","_LoadWebsite","_React$Component","inherits","createClass","key","document","getElementById","getUrl","ReactDOM","findDOMNode","assign","displayName","EnhancedButton","EnhancedLink","EnhancedLogo","Content","id","render","src_App_0","clock_Clock","button_Button","form_InputText","form_Account","HOC_Content","button_ButtonTest","title","email","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.af3d4a32.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\n\r\nclass AnalogDisplay extends React.Component {\r\n    render() {\r\n        let date = new Date(this.props.time)\r\n        let dialStyle = {\r\n            position: 'relative',\r\n            top: 0,\r\n            left: 0,\r\n            width: 200,\r\n            height: 200,\r\n            borderRadius: 20000,\r\n            borderStyle: 'solid',\r\n            borderColor: 'black'\r\n        }\r\n        let secondHandStyle = {\r\n            position: 'relative',\r\n            top: 100,\r\n            left: 100,\r\n            border: '1px solid red',\r\n            width: '40%',\r\n            height: 1,\r\n            transform: 'rotate(' + ((date.getSeconds() / 60) * 360 - 90).toString() + 'deg)',\r\n            transformOrigin: '0% 0%',\r\n            backgroundColor: 'red'\r\n        }\r\n        let minuteHandStyle = {\r\n            position: 'relative',\r\n            top: 100,\r\n            left: 100,\r\n            border: '1px solid grey',\r\n            width: '40%',\r\n            height: 3,\r\n            transform: 'rotate(' + ((date.getMinutes() / 60) * 360 - 90).toString() + 'deg)',\r\n            transformOrigin: '0% 0%',\r\n            backgroundColor: 'grey'\r\n        }\r\n        let hourHandStyle = {\r\n            position: 'relative',\r\n            top: 92,\r\n            left: 106,\r\n            border: '1px solid grey',\r\n            width: '20%',\r\n            height: 7,\r\n            transform: 'rotate(' + ((date.getHours() / 12) * 360 - 90).toString() + 'deg)',\r\n            transformOrigin: '0% 0%',\r\n            backgroundColor: 'grey'\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div style={dialStyle}>\r\n                    <div style={secondHandStyle}/>\r\n                    <div style={minuteHandStyle}/>\r\n                    <div style={hourHandStyle}/>\r\n                </div>\r\n            </div>)\r\n    }\r\n}\r\n\r\nexport default AnalogDisplay;","import React from 'react';\r\n\r\nconst DigitalDisplay = function (props) {\r\n    return <div>{props.time}</div>\r\n}\r\nexport default DigitalDisplay;","import React from 'react';\r\nimport AnalogDisplay from './AnalogDisplay'\r\nimport DigitalDisplay from './DigitalDisplay'\r\n\r\nclass Clock extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.launchClock()\r\n        this.state = {\r\n            currentTime: (new Date()).toString()\r\n        }\r\n    }\r\n\r\n    launchClock() {\r\n        setInterval(() => {\r\n                //console.log('Updating...')\r\n                this.setState({\r\n                    currentTime: (new Date()).toString()\r\n                })\r\n            }, 1000\r\n        )\r\n    }\r\n\r\n    render() {\r\n        //console.log('Rendering...')\r\n        return (\r\n            <div>\r\n                <AnalogDisplay time={this.state.currentTime}/>\r\n                <DigitalDisplay time={this.state.currentTime}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Clock;","import React from 'react';\r\n\r\nclass HelloWorld extends React.Component {\r\n    render() {\r\n        return React.createElement(\r\n            'h1',\r\n            this.props,\r\n            'Hello ' + this.props.frameWorkName + ' world!!!'\r\n        )\r\n    }\r\n}\r\n\r\nexport default HelloWorld;","import React from 'react';\r\n\r\nclass Button extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            counter: 0\r\n        }\r\n    }\r\n\r\n    handleClick(event) {\r\n        this.setState({\r\n            counter: ++this.state.counter\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <button\r\n                    onClick={this.handleClick.bind(this)}>\r\n                    Don't Click me {this.state.counter} times!\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Button;","import React from 'react';\r\n\r\nclass InputText extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n    handleChange(event) {\r\n        console.log(event.target.value)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <input\r\n                type=\"text\"\r\n                onChange={this.handleChange}\r\n                defaultValue=\"hi@azat.co\"\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputText;","import React from 'react';\r\n\r\n\r\nclass Account extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.state = {\r\n            accountNumber: ''\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        console.log('Typed: ', event.target.value)\r\n        this.setState({\r\n            accountNumber: event.target.value.replace(/\\D/ig, '')\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                Account Number:\r\n                <input\r\n                    type=\"text\"\r\n                    onChange={this.handleChange}\r\n                    placeholder=\"123456\"\r\n                    value={this.state.accountNumber}/>\r\n                <br/>\r\n                <span>{this.state.accountNumber.length > 0 ? 'You entered: ' + this.state.accountNumber : ''}</span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Account;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ButtonTest extends React.Component {\r\n\r\n    render() {\r\n        return <button className=\"btn\">{this.props.buttonLabel}</button>\r\n    }\r\n}\r\n\r\nButtonTest.propTypes = {\r\n    title: PropTypes.string,\r\n    handler: PropTypes.func.isRequired,\r\n    email(props, propName, componentName) {\r\n        let emailRegularExpression = /^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$/i;\r\n        if (!emailRegularExpression.test(props[propName])) {\r\n            return new Error('Email validation failed!');\r\n        }\r\n    }\r\n}\r\n\r\nButtonTest.defaultProps = {\r\n    buttonLabel: 'submit'\r\n}\r\n\r\nexport default ButtonTest;","import React from \"react\";\r\n\r\nclass Button extends React.Component {\r\n    render() {\r\n        return (\r\n            <button\r\n            className=\"btn btn-primary\"\r\n            onClick={this.props.handleClick}>\r\n                {this.props.label}\r\n            </button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Button;","import React from \"react\";\r\n\r\nclass Link extends React.Component {\r\n    render() {\r\n        return(\r\n            <a onClick={this.props.handleClick} href=\"#\">{this.props.label}</a>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Link;","import React from \"react\";\r\n\r\nclass Logo extends React.Component{\r\n    render() {\r\n        return(\r\n            <img onClick={this.props.handleClick} width=\"40\" src=\"logo.png\" href=\"#\"/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Logo;","import React, {Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst LoadWebsite = (Component) => {\r\n    class _LoadWebsite extends React.Component {\r\n        constructor(props){\r\n            super(props)\r\n            this.state={\r\n                label:'Run',\r\n                handleClick:this.handleClick.bind(this)\r\n            }\r\n\r\n        }\r\n\r\n        getUrl(){\r\n            return 'https://www.baidu.com'\r\n        }\r\n\r\n        handleClick(event){\r\n            document.getElementById('frame').src=this.getUrl()\r\n        }\r\n\r\n        componentDidMount() {\r\n            console.log(ReactDOM.findDOMNode(this))\r\n        }\r\n\r\n        render() {\r\n            console.log(this.state)\r\n            return(\r\n                <Component {...this.state} {...this.props}/>\r\n            )\r\n        }\r\n    }\r\n\r\n    _LoadWebsite.displayName = 'EnhancedComponent'\r\n    return _LoadWebsite\r\n}\r\n\r\nexport default LoadWebsite;","import React from 'react';\r\nimport Button from './Button';\r\nimport Link from './Link';\r\nimport Logo from './Logo';\r\nimport LoadWebsite from './LoadWebsite'\r\n\r\nconst EnhancedButton = LoadWebsite(Button)\r\nconst EnhancedLink = LoadWebsite(Link)\r\nconst EnhancedLogo = LoadWebsite(Logo)\r\n\r\nclass Content extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <EnhancedButton/>\r\n                <br/>\r\n                <br/>\r\n                <EnhancedLink/>\r\n                <br/>\r\n                <br/>\r\n                <EnhancedLogo/>\r\n                <br/>\r\n                <br/>\r\n                <iframe id=\"frame\" src=\"\" width=\"600\" height=\"500\"/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Content;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Clock from './clock/Clock';\nimport HelloWorld from './HelloWorld'\nimport Button from './button/Button'\nimport InputText from \"./form/InputText\";\nimport Account from \"./form/Account\";\nimport ButtonTest from './button/ButtonTest'\nimport Content from \"./HOC/Content\";\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\nReactDOM.render(<Clock/>, document.getElementById('clock'));\n\nReactDOM.render(<Button/>, document.getElementById('button'));\n\nReactDOM.render(<InputText/>, document.getElementById('inputText'))\n\nReactDOM.render(<Account/>, document.getElementById('account'))\n\nReactDOM.render(<Content/>,document.getElementById('hoc'))\n\nReactDOM.render(<div>\n        <ButtonTest buttonLabel=\"start\"/>\n        <ButtonTest/>\n        <ButtonTest title={1}/>\n        <ButtonTest/>\n        <ButtonTest email=\"not-a-valid-email\"/>\n        <ButtonTest email=\"534102725@qq.com\"/>\n    </div>\n    , document.getElementById('buttonTest'))\n\nReactDOM.render(\n    React.createElement(\n        'div',\n        null,\n        React.createElement(\n            HelloWorld,\n            {\n                id: 'ember',\n                frameWorkName: 'Ember.js',\n                title: 'A framework named Ember.'\n            }\n        ),\n        React.createElement(\n            HelloWorld,\n            {\n                id: 'backbone',\n                frameWorkName: 'Backbone.js',\n                title: 'A framework named Backbone.'\n            }\n        ),\n        React.createElement(\n            HelloWorld,\n            {\n                id: 'angular',\n                frameWorkName: 'Angular.js',\n                title: 'A framework named Angular.'\n            }\n        )\n    ),\n    document.getElementById('helloWorld')\n);\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}